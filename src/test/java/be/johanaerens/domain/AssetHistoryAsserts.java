package be.johanaerens.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AssetHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetHistoryAllPropertiesEquals(AssetHistory expected, AssetHistory actual) {
        assertAssetHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertAssetHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetHistoryAllUpdatablePropertiesEquals(AssetHistory expected, AssetHistory actual) {
        assertAssetHistoryUpdatableFieldsEquals(expected, actual);
        assertAssetHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetHistoryAutoGeneratedPropertiesEquals(AssetHistory expected, AssetHistory actual) {
        assertThat(expected)
            .as("Verify AssetHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetHistoryUpdatableFieldsEquals(AssetHistory expected, AssetHistory actual) {
        assertThat(expected)
            .as("Verify AssetHistory relevant properties")
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetHistoryUpdatableRelationshipsEquals(AssetHistory expected, AssetHistory actual) {
        assertThat(expected)
            .as("Verify AssetHistory relationships")
            .satisfies(e -> assertThat(e.getAsset()).as("check asset").isEqualTo(actual.getAsset()))
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
